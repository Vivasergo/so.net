{"version":3,"sources":["Components/Pages/Messages/Dialogs/DialogForm.jsx","Components/Pages/Messages/Dialogs/DialogFormContainer.js","Components/Pages/Messages/Messages.jsx","hoc/withAuthRedirect.js","Components/Pages/Messages/MessagesContainer.js"],"names":["ReduxDialogForm","reduxForm","form","props","onSubmit","handleSubmit","Field","validate","required","component","Input","name","placeholder","className","DialogForm","formData","setNewMessageThunk","DialogFormContainer","this","Component","connect","state","Messages","dialogs","map","dialog","key","id","message","withAuthRedirect","isLogged","auth","to","MessagesContainer","compose","userDialogs"],"mappings":"8NAoBMA,EAAkBC,YAAU,CAAEC,KAAM,cAAlBD,EAhBA,SAACE,GACvB,OACE,6BACE,0BAAMC,SAAUD,EAAME,cACpB,6BACE,kBAACC,EAAA,EAAD,CAAOC,SAAU,CAACC,KAAWC,UAAWC,IAAOC,KAAK,UAAUC,YAAY,uBAE5E,yBAAKC,UAAW,QACd,8CAmBKC,EARI,SAACX,GAKlB,OAAO,kBAACH,EAAD,CAAiBI,SAJP,SAACW,GAChBZ,EAAMa,mBAAmBD,OCpBvBE,E,uKAGE,OACI,kBAAC,EAAeC,KAAKf,W,GAJCgB,aAYnBC,eAHS,SAACC,GAAD,MAAY,KAGI,CAAEL,wBAA3BI,CACbH,GCWaK,EA1BE,SAACnB,GACd,OACI,oCAEI,6BACI,6CACA,yBAAKU,UAAW,QACXV,EAAMoB,QAAQC,KAAI,SAACC,GAChB,OAAO,yBAAKC,IAAKD,EAAOE,IAAKF,EAAOG,cAIhD,kBAAC,EAAD,MACA,yBAAKf,UAAW,4BACZ,wBAAIA,UAAW,iBAAf,mBACA,6BACA,+FACA,4BACI,qFACA,0D,QCDLgB,EAhBU,SAACV,GAaxB,OAAOC,aAXe,SAACC,GAAD,MAAY,CAChCS,SAAUT,EAAMU,KAAKD,YAUhBV,EAPmB,SAACjB,GACzB,OAAKA,EAAM2B,SAGJ,kBAACX,EAAchB,GAFb,kBAAC,IAAD,CAAU6B,GAAG,eCNpBC,E,uKAEF,OAAO,kBAAC,EAAaf,KAAKf,W,GAFEgB,aAejBe,sBACbd,aAPsB,SAACC,GAAD,MAAY,CAClCE,QAASF,EAAMc,YAAYZ,WAMF,CAAEP,yBAC3Ba,EAFaK,CAGbD","file":"static/js/3.61a3af74.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport {Input, required} from \"../../../common/utils/formValidation/formValidation\";\r\n\r\nconst DialogFormBlock = (props) => {\r\n  return (\r\n    <div>\r\n      <form onSubmit={props.handleSubmit}>\r\n        <div>\r\n          <Field validate={[required]} component={Input} name=\"message\" placeholder=\"Enter new message\" />\r\n        </div>\r\n        <div className={\"mt-2\"}>\r\n          <button>Send</button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\n//Redux Form connection (wrapper for the form)\r\nconst ReduxDialogForm = reduxForm({ form: \"dialogForm\" })(DialogFormBlock);\r\n\r\n//dialog container to pass the thunk function, obtained via the props to the onSubmit form method\r\nconst DialogForm = (props) => {\r\n  const onSubmit = (formData) => {\r\n    props.setNewMessageThunk(formData);\r\n  };\r\n\r\n  return <ReduxDialogForm onSubmit={onSubmit} />;\r\n};\r\n\r\nexport default DialogForm;\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport DialogForm from './DialogForm'\r\nimport { setNewMessageThunk } from './../../../../Redux/dialogsReducer';\r\n\r\nclass DialogFormContainer extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <DialogForm {...this.props} />\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({});\r\n\r\n\r\nexport default connect(mapStateToProps, { setNewMessageThunk })(\r\n  DialogFormContainer\r\n);\r\n","import React from \"react\";\r\nimport DialogFormContainer from './Dialogs/DialogFormContainer';\r\n\r\nconst Messages = (props) => {\r\n    return (\r\n        <>\r\n\r\n            <div>\r\n                <h3>Messages page</h3>\r\n                <div className={\"mb-3\"}>\r\n                    {props.dialogs.map((dialog) => {\r\n                        return <div key={dialog.id}>{dialog.message}</div>;\r\n                    })}\r\n                </div>\r\n            </div>\r\n            <DialogFormContainer/>\r\n            <div className={\"alert alert-warning mt-3\"}>\r\n                <h5 className={\"alert-heading\"}>Author's notice</h5>\r\n                <hr/>\r\n                <p>This page was created for testing next approaches/functionality:</p>\r\n                <ul>\r\n                    <li>Redux form (including form validation custom methods)</li>\r\n                    <li>Redux state management</li>\r\n                </ul>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Messages;\r\n","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\n//custom HOC for unauthorized users redirection\r\nconst withAuthRedirect = (Component) => {\r\n\r\n  let mapStateToProps = (state) => ({\r\n    isLogged: state.auth.isLogged,\r\n  });\r\n\r\n  const RedirectComponent = (props) => {\r\n    if (!props.isLogged) {\r\n      return <Redirect to=\"/login\" />;\r\n    }\r\n    return <Component {...props} />;\r\n  };\r\n\r\n  return connect(mapStateToProps)(RedirectComponent);\r\n};\r\n\r\nexport default withAuthRedirect;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { compose } from \"redux\";\r\nimport { setNewMessageThunk } from \"../../../Redux/dialogsReducer\";\r\nimport Messages from \"./Messages\";\r\nimport withAuthRedirect from \"./../../../hoc/withAuthRedirect\";\r\n\r\nclass MessagesContainer extends Component {\r\n  render() {\r\n    return <Messages {...this.props} />;\r\n  }\r\n}\r\n\r\n//mapping state data stored in Redux Store to send it via Redux connect HOC and use it\r\n//inside the wrapped component through the props\r\n//some kind of Context functionality\r\nconst mapStateToProps = (state) => ({\r\n  dialogs: state.userDialogs.dialogs,\r\n});\r\n\r\n//connection to the Redux Store\r\n//applying\r\nexport default compose(\r\n  connect(mapStateToProps, { setNewMessageThunk }),\r\n  withAuthRedirect\r\n)(MessagesContainer);\r\n"],"sourceRoot":""}